/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WishlistImport } from './routes/wishlist'
import { Route as CartImport } from './routes/cart'
import { Route as CheckoutImport } from './routes/checkout'
import { Route as indexImport } from './routes/index'
import { Route as ProfileSettingsImport } from './routes/profile/settings'
import { Route as OrdersPendingImport } from './routes/orders/pending'
import { Route as OrdersIndexImport } from './routes/orders/index'
import { Route as CheckoutSuccessImport } from './routes/checkout/success'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as ProductProductIdImport } from './routes/product/$productId'
import { Route as CategoryCategoryIdImport } from './routes/category/$categoryId'

// Create/Update Routes

const WishlistRoute = WishlistImport.update({
  path: '/wishlist',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutRoute = CheckoutImport.update({
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const indexRoute = indexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileSettingsRoute = ProfileSettingsImport.update({
  path: '/profile/settings',
  getParentRoute: () => rootRoute,
} as any)

const OrdersPendingRoute = OrdersPendingImport.update({
  path: '/orders/pending',
  getParentRoute: () => rootRoute,
} as any)

const OrdersIndexRoute = OrdersIndexImport.update({
  path: '/orders/',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutSuccessRoute = CheckoutSuccessImport.update({
  path: '/checkout/success',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const ProductProductIdRoute = ProductProductIdImport.update({
  path: '/product/$productId',
  getParentRoute: () => rootRoute,
} as any)

const CategoryCategoryIdRoute = CategoryCategoryIdImport.update({
  path: '/category/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof indexImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutImport
      parentRoute: typeof rootRoute
    }
    '/wishlist': {
      id: '/wishlist'
      path: '/wishlist'
      fullPath: '/wishlist'
      preLoaderRoute: typeof WishlistImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/category/$categoryId': {
      id: '/category/$categoryId'
      path: '/category/$categoryId'
      fullPath: '/category/$categoryId'
      preLoaderRoute: typeof CategoryCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/checkout/success': {
      id: '/checkout/success'
      path: '/checkout/success'
      fullPath: '/checkout/success'
      preLoaderRoute: typeof CheckoutSuccessImport
      parentRoute: typeof rootRoute
    }
    '/orders/': {
      id: '/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/orders/pending': {
      id: '/orders/pending'
      path: '/orders/pending'
      fullPath: '/orders/pending'
      preLoaderRoute: typeof OrdersPendingImport
      parentRoute: typeof rootRoute
    }
    '/product/$productId': {
      id: '/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof ProductProductIdImport
      parentRoute: typeof rootRoute
    }
    '/profile/settings': {
      id: '/profile/settings'
      path: '/profile/settings'
      fullPath: '/profile/settings'
      preLoaderRoute: typeof ProfileSettingsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof indexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/wishlist': typeof WishlistRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/category/$categoryId': typeof CategoryCategoryIdRoute
  '/checkout/success': typeof CheckoutSuccessRoute
  '/orders/': typeof OrdersIndexRoute
  '/orders/pending': typeof OrdersPendingRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/profile/settings': typeof ProfileSettingsRoute
}

export interface FileRoutesByTo {
  '/': typeof indexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/wishlist': typeof WishlistRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/category/$categoryId': typeof CategoryCategoryIdRoute
  '/checkout/success': typeof CheckoutSuccessRoute
  '/orders': typeof OrdersIndexRoute
  '/orders/pending': typeof OrdersPendingRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/profile/settings': typeof ProfileSettingsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof indexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/wishlist': typeof WishlistRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/category/$categoryId': typeof CategoryCategoryIdRoute
  '/checkout/success': typeof CheckoutSuccessRoute
  '/orders/': typeof OrdersIndexRoute
  '/orders/pending': typeof OrdersPendingRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/profile/settings': typeof ProfileSettingsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cart' | '/checkout' | '/wishlist' | '/auth/login' | '/auth/register' | '/category/$categoryId' | '/checkout/success' | '/orders/' | '/orders/pending' | '/product/$productId' | '/profile/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cart' | '/checkout' | '/wishlist' | '/auth/login' | '/auth/register' | '/category/$categoryId' | '/checkout/success' | '/orders' | '/orders/pending' | '/product/$productId' | '/profile/settings'
  id: '__root__' | '/' | '/cart' | '/checkout' | '/wishlist' | '/auth/login' | '/auth/register' | '/category/$categoryId' | '/checkout/success' | '/orders/' | '/orders/pending' | '/product/$productId' | '/profile/settings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  indexRoute: typeof indexRoute
  CartRoute: typeof CartRoute
  CheckoutRoute: typeof CheckoutRoute
  WishlistRoute: typeof WishlistRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  CategoryCategoryIdRoute: typeof CategoryCategoryIdRoute
  CheckoutSuccessRoute: typeof CheckoutSuccessRoute
  OrdersIndexRoute: typeof OrdersIndexRoute
  OrdersPendingRoute: typeof OrdersPendingRoute
  ProductProductIdRoute: typeof ProductProductIdRoute
  ProfileSettingsRoute: typeof ProfileSettingsRoute
}

const rootRouteChildren: RootRouteChildren = {
  indexRoute: indexRoute,
  CartRoute: CartRoute,
  CheckoutRoute: CheckoutRoute,
  WishlistRoute: WishlistRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  CategoryCategoryIdRoute: CategoryCategoryIdRoute,
  CheckoutSuccessRoute: CheckoutSuccessRoute,
  OrdersIndexRoute: OrdersIndexRoute,
  OrdersPendingRoute: OrdersPendingRoute,
  ProductProductIdRoute: ProductProductIdRoute,
  ProfileSettingsRoute: ProfileSettingsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */